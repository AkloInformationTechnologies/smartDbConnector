// Generated by CoffeeScript 1.6.2
var DIGITS_REGEX, metadataParse, parser;

metadataParse = require('../metadata-parser');

DIGITS_REGEX = /^\d+$/;

parser = function(buffer, colMetadata, tdsVersion) {
  var c, colName, column, columnCount, columns, metadata, numberOfTableNameParts, part, tableName, _i;

  columnCount = buffer.readUInt16LE();
  columns = [];
  for (c = _i = 1; 1 <= columnCount ? _i <= columnCount : _i >= columnCount; c = 1 <= columnCount ? ++_i : --_i) {
    metadata = metadataParse(buffer, tdsVersion);
    if (metadata.type.hasTableName) {
      numberOfTableNameParts = buffer.readUInt8();
      tableName = (function() {
        var _j, _results;

        _results = [];
        for (part = _j = 1; 1 <= numberOfTableNameParts ? _j <= numberOfTableNameParts : _j >= numberOfTableNameParts; part = 1 <= numberOfTableNameParts ? ++_j : --_j) {
          _results.push(buffer.readUsVarchar('ucs2'));
        }
        return _results;
      })();
    } else {
      tableName = void 0;
    }
    colName = buffer.readBVarchar();
    column = {
      userType: metadata.userType,
      flags: metadata.flags,
      type: metadata.type,
      colName: colName,
      collation: metadata.collation,
      precision: metadata.precision,
      scale: metadata.scale,
      dataLength: metadata.dataLength,
      tableName: tableName
    };
    columns.push(column);
    if (!(DIGITS_REGEX.test(column.colName))) {
      columns[column.colName] = column;
    }
  }
  return {
    name: 'COLMETADATA',
    event: 'columnMetadata',
    columns: columns
  };
};

module.exports = parser;
