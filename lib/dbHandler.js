var mongo = require('mongoskin');var db = mongo.db('localhost:27017/smartReporter?auto_reconnect',{safe:true});var Systems = db.collection('systems');var Reports = db.collection('reports');var sqlConnector = require("./sqlConnector").load();exports.load = function(){	return DbHandler();}function DbHandler(){    function setSystemsInfo(params, callback){		Systems.find().toArray(function(err, systems){			for(var i=0; i<systems.length; i++){				Global.systems[systems._id] = systems[i];			}			callback(params);		});	}		function setSystemInfo(system,reportName, dbParams,callback){		Systems.findOne({_id:system}, function (err, systemInfo) {			if(systemInfo){				Global.smartReports[system] = systemInfo;				Reports.findOne({name:reportName.toLowerCase(), system:system}, function (err, reportInfo) {					if(reportInfo){												if(dbParams.length == 1 && typeof(dbParams[0])==="string" && dbParams[0].toUpperCase() === "PARAMS"						&& reportInfo.type === "SP"){							callback(reportInfo.sp.params);						}						else{							routeToDb(systemInfo,reportInfo, dbParams,callback);						}											}					else					{						callback({ Error: "No report is found as "  + reportName.toLowerCase() + " in " + system  +" system"});					}				});											}			else{				callback({ Error: "No system is found for " + system });			}					});	}    function routeToDb(systemInfo,reportInfo, dbParams,callback){		if(systemInfo && systemInfo.dbType === "SQL"){			sqlConnector.setConfig(systemInfo.config);				sqlConnector.sendResult(reportInfo, dbParams,callback);		}	}    function setReportsInfo(system,params,callback){		Reports.findOne({_id:system}, function (err, reportsInfo) {			Global.smartReports[system] = reportsInfo;			callback(params);		});	}		function sendSqlResult(con, callback){		sqlConnector.setConfig(con);		sqlConnector.sendSpResult(spName, params,values,callback);	}	return{		sendResults: function(system, reportName, dbParams, callback){			console.dir(Global.systems);			if(!Global.systems[system.trim().toUpperCase()]){				setSystemInfo(system,reportName, dbParams,callback);			}			else{				callback("Already contains the system info");			}					}	}}