mongo = require('mongoskin');db = mongo.db('localhost:27017/smartReporter?auto_reconnect',{safe:true});Systems = db.collection('systems');Reports = db.collection('reports');var connectors = {	SQL : require("../model/sqlConnector").load(),	MYSQL: require("../model/mysqlConnector").load()}exports.load = function(){	return DbHandler();}function DbHandler(){    function setSystemsInfo(params, callback){		Systems.find().toArray(function(err, systems){			for(var i=0; i<systems.length; i++){				Global.systems[systems._id] = systems[i];			}			callback(params);		});	}		function sendServiceInfo(system,systemInfo,reportName, dbParams,callback){				if(reportName.toUpperCase() === "SERVICES"){					Reports.find({system:system}, {name:1, _id:0}).toArray(function (err, reports) {						if(reports && reports.length > 0){							callback(reports);							}						else						{							callback({ Error: "No report/service is found in "  + system  +" system"});						}					});				}				else if(reportName.toUpperCase() === "SPS" || reportName.toUpperCase() ==="SPSPEC"){					if(dbParams && dbParams.length > 0){						console.log("send sps :" + systemInfo);						routeToDb(systemInfo,reportName.toUpperCase(), dbParams,callback);					}					else{						callback({ Error: "Please send the SP name as parameter"});					}				}				else if(reportName.toUpperCase() === "NEWSERVICE"){ // New service by sp					if(dbParams && dbParams.length>=2){						Reports.findOne({name:dbParams[0].toLowerCase(), system:system}, function (err, reportInfo) {							if(reportInfo){								callback({ Error: "another service is already exists for the given name."});							}							else{								routeToDb(systemInfo,reportName.toUpperCase(), dbParams,callback);							}						});					}					else{						callback({ Error: "service name and sp name should be provided as parameters"});					}				}				else{					Reports.findOne({name:reportName.toLowerCase(), system:system}, function (err, reportInfo) {						if(reportInfo){													//callback(reportInfo);							if(dbParams.length == 1 && typeof(dbParams[0])==="string" && dbParams[0].toUpperCase() === "PARAMS"){								if(reportInfo.type === "SP"){									callback(reportInfo.sp.params);								}								else if(reportInfo.type === "QUERY" && reportInfo.query.params){									callback(reportInfo.query.params);								}								else{									callback({ Result: "No parameter is required for "  + reportName.toLowerCase() + " service in " + system  +" system"});								}							}							else{								routeToDb(systemInfo,reportInfo, dbParams,callback);							}													}						else						{							callback({ Error: "No report/service is found as "  + reportName.toLowerCase() + " in " + system  +" system"});						}					});				}	}    	function routeToDb(systemInfo,reportInfo, dbParams,callback){		if(systemInfo && connectors[systemInfo.dbType]){			//callback(systemInfo);			console.dir("system info: " + JSON.stringify(systemInfo));			connectors[systemInfo.dbType].setConfig(systemInfo._id, systemInfo.config);				connectors[systemInfo.dbType].sendResult(reportInfo, dbParams,callback);		}	}    function setReportsInfo(system,params,callback){		Reports.findOne({_id:system}, function (err, reportsInfo) {			Global.smartReports[system] = reportsInfo;			callback(params);		});	}	return{		sendResults: function(system, reportName, dbParams, callback){			//console.dir(Global.systems);			if(!Global.systems[system.trim().toUpperCase()]){				//				callback({ Error: "No system is found for " + system });							}			else{				sendServiceInfo(system,Global.systems[system],reportName, dbParams,callback);			}					},				sendSystems:function(callback){			if(Global.systems){				callback(Global.systems);			}			else{				callback({ Result: "No system is integrated."});			}		}	}}